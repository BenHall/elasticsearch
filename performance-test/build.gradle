apply plugin: 'java'

repositories {
    maven {
        url "https://jitpack.io"
    }
}

sourceSets {
    performanceTest {
        java.srcDir file('src/main/java')
        resources.srcDir file('src/performanceTest/resources')
    }
}

dependencies {

    compile project(':scheduler')

    compile 'junit:junit:4.12'
    compile 'com.github.docker-java:docker-java:1.3.0'
    compile 'com.mashape.unirest:unirest-java:1.4.5'
    compile 'com.jayway.awaitility:awaitility:1.6.3'
    compile 'com.github.ContainerSolutions:mini-mesos:51a13f01e8ab299df6adc5a79d1e10a42d96d4ef'
    compile 'com.github.alex-glv:shakespeare-works:294bdcf1b3d5208adf7024d8230f1438e746791d'

    performanceTestCompile 'junit:junit:4.12'
    performanceTestCompile 'com.github.docker-java:docker-java:1.3.0'
    performanceTestCompile 'com.mashape.unirest:unirest-java:1.4.5'
    performanceTestCompile 'com.jayway.awaitility:awaitility:1.6.3'
    performanceTestCompile 'com.github.ContainerSolutions:mini-mesos:51a13f01e8ab299df6adc5a79d1e10a42d96d4ef'
    performanceTestCompile 'com.github.alex-glv:shakespeare-works:294bdcf1b3d5208adf7024d8230f1438e746791d'

}

task main(type:JavaExec, dependsOn: 'compileJava') {
    main = "org.apache.mesos.elasticsearch.performancetest.Main"
    classpath = sourceSets.main.runtimeClasspath
}

test {
    enabled = false
}

task performanceTest(type: Test) {
    testClassesDir = sourceSets.performanceTest.output.classesDir
    classpath = sourceSets.performanceTest.runtimeClasspath
    include '**/*PerformanceTest*'
    testLogging {
        showStandardStreams = true
    }
    outputs.upToDateWhen { false }
}

